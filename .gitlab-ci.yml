include:
  - project: SocialGouv/gitlab-ci-yml
    file: /autodevops_simple.yml
    ref: rulez-gary2

variables:
  AUTO_DEVOPS_RELEASE_AUTO: "YEAH"
  # AUTO_DEVOPS_TEST_DISABLED: "ðŸ›‘"
  AUTO_DEVOPS_QUALITY_CHECK_DISABLED: "ðŸ›‘"

.rule_before_release: &rule_before_release
  if: ($CI_COMMIT_BRANCH == 'master' && $AUTO_DEVOPS_RELEASE_AUTO && $CI_COMMIT_MESSAGE =~ /\(#\d+\)/) || $RELEASE
.rule_on_release: &rule_on_release
  if: $CI_COMMIT_TAG && $AUTO_DEVOPS_RELEASE_AUTO && $PRODUCTION == null && $RELEASE == null
.rule_on_feature_branch: &rule_on_feature_branch
  if: $CI_COMMIT_BRANCH != 'master' && $CI_COMMIT_TAG == null && $RELEASE == null
.rule_on_production: &rule_on_production
  if: $PRODUCTION && $CI_COMMIT_TAG

stages:
  - Install
  - Quality check
  - Build
  - Registration
  - Release
  - Deploy
  - Wait
  - Seed

Register Hasura:
  extends: .autodevops_register_image
  dependencies:
    - Build
  needs: []
  environment:
    name: ${CI_COMMIT_REF_NAME}-dev2
  variables:
    CONTEXT: ./packages/hasura
    IMAGE_NAME: $CI_REGISTRY_IMAGE/hasura
  rules:
    # - <<: *rule_on_release
    #   when: on_success
    # - <<: *rule_on_feature_branch
    #   when: on_success
    # - when: never
    - <<: *rule_before_release
      when: never
    - when: on_success

.on_branches_only:
  environment:
    name: ${CI_COMMIT_REF_NAME}-dev2
    url: https://${CI_ENVIRONMENT_SLUG}-${CI_PROJECT_NAME}.${KUBE_INGRESS_BASE_DOMAIN}
  rules:
    # - <<: *rule_on_feature_branch
    #   when: on_success
    # - when: never
    - <<: *rule_before_release
      when: never
    - <<: *rule_on_release
      when: never
    - <<: *rule_on_production
      when: never
    - when: on_success

Wait hasura:
  stage: Wait
  extends: .on_branches_only
  image:
    name: registry.gitlab.factory.social.gouv.fr/socialgouv/docker/azure-db:1.60.0
    entrypoint: [""]
  script:
    - kubectl rollout status deployment.v1.apps/hasura

Create seeds DB (dev):
  stage: Seed
  extends: .on_branches_only
  image:
    name: postgres:11
    entrypoint: [""]
  variables:
    GIT_STRATEGY: clone
    PGHOST: carnetsdevserver.postgres.database.azure.com
    PGUSER: user_${CI_COMMIT_SHORT_SHA}@${PGHOST}
    PGPASSWORD: password_${CI_COMMIT_SHORT_SHA}
    PGDATABASE: autodevops_${CI_COMMIT_SHORT_SHA}
    PGSSLMODE: require
  script:
    - psql < ./scripts/seeds-dev.sql

Test k8s :
  stage: .pre
  extends: .on_branches_only
  image:
    name: node:14-alpine
  script:
    - yarn k8s
    - yarn k8s test
