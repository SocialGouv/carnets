name: Review

on:
  push:
    branches:
      - beta
    tags-ignore:
      - v*

concurrency:
  cancel-in-progress: true
  group: review-${{ github.ref }}

jobs:

  ##############################################################################
  ## CREATE POSTGRES DATABASE
  ##############################################################################
  create-db:
    name: Create postgres database
    runs-on: ubuntu-latest
    steps:

    - uses: SocialGouv/actions/autodevops-create-db@v1
      with:
        environment: dev
        kubeconfig: ${{ secrets.KUBECONFIG }}
        rancherId: ${{ secrets.RANCHER_PROJECT_ID }}
        socialgouvBaseDomain: ${{ secrets.SOCIALGOUV_BASE_DOMAIN }}

  ##############################################################################
  ## BUILD AND REGISTER HASURA IMAGE
  ##############################################################################
  register-hasura:
    name: Build & Register Hasura
    runs-on: ubuntu-latest
    steps:

    - name: Get project name
      run: |
        echo "project=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

    - name: Use autodevops build and register
      uses: SocialGouv/actions/autodevops-build-register@v1
      with:
        imageName: fabrique/hasura
        project: ${{ env.project }}
        token: ${{ secrets.GITHUB_TOKEN }}
        dockercontext: ./packages/hasura
        dockerfile: ./packages/hasura/Dockerfile

  ##############################################################################
  ## GENERATE HASURA MANIFESTS
  ##############################################################################
  manifests-hasura:
    name: Generate Hasura manifests
    runs-on: ubuntu-latest
    steps:

    - name: Use autodevops manifests generation
      uses: SocialGouv/actions/autodevops-manifests@manifests-name
      with:
        environment: "dev"
        kosko-args: hasura
        manifestsName: hasura-manifests
        rancherId: ${{ secrets.RANCHER_PROJECT_ID }}
        socialgouvBaseDomain: ${{ secrets.SOCIALGOUV_BASE_DOMAIN }}
        koskoChartsVersion: 19ea436cf7f4cfca6d94f950309e707115b408a9

  ##############################################################################
  ## GENERATE KUBERNETES MANIFESTS
  ##############################################################################
  manifests-app:
    name: Generate k8s manifests
    runs-on: ubuntu-latest
    #needs: [restore-db, deploy-hasura]
    steps:

    - name: Use autodevops manifests generation
      uses: SocialGouv/actions/autodevops-manifests@manifests-name
      with:
        environment: "dev"
        kosko-args: app
        manifestsName: app-manifests
        rancherId: ${{ secrets.RANCHER_PROJECT_ID }}
        socialgouvBaseDomain: ${{ secrets.SOCIALGOUV_BASE_DOMAIN }}
        koskoChartsVersion: 19ea436cf7f4cfca6d94f950309e707115b408a9

  ##############################################################################
  ## DEPLOY HASURA OVER KUBERNETES
  ##############################################################################
  deploy-hasura:
    name: Deploy Hasura
    runs-on: ubuntu-latest
    needs: [create-db, register-hasura, manifests-hasura]
    outputs:
      url: ${{ steps.deploy-hasura.outputs.url }}
    steps:

    - name: Use autodevops deployment
      uses: SocialGouv/actions/autodevops-deploy@manifests-name
      id: deploy-hasura
      with:
        environment: "dev"
        manifestsName: hasura-manifests
        token: ${{ secrets.GITHUB_TOKEN }}
        kubeconfig: ${{ secrets.KUBECONFIG }}
        rancherId: ${{ secrets.RANCHER_PROJECT_ID }}

  ##############################################################################
  ## RESTORE DATABASE
  ##############################################################################
  restore-db:
    name: Restore database
    runs-on: ubuntu-latest
    needs: [deploy-hasura]
    steps:

    - name: Use autodevops database restore
      uses: SocialGouv/actions/autodevops-restore-db@v1
      with:
        kubeconfig: ${{ secrets.KUBECONFIG }}
        rancherId: ${{ secrets.RANCHER_PROJECT_ID }}
        socialgouvBaseDomain: ${{ secrets.SOCIALGOUV_BASE_DOMAIN }}

  ##############################################################################
  ## BUILD AND REGISTER APPLICATION IMAGE
  ##############################################################################
  register-app:
    name: Build & Register application
    runs-on: ubuntu-latest
    needs: [restore-db, deploy-hasura]
    steps:

    - name: Get project name
      run: |
        echo "project=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

    - name: Use autodevops build and register
      uses: SocialGouv/actions/autodevops-build-register@v1
      with:
        imageName: fabrique/carnets
        project: ${{ env.project }}
        token: ${{ secrets.GITHUB_TOKEN }}
        dockerbuildargs: |
          NEXT_PUBLIC_APP_VERSION=dev
          NEXT_PUBLIC_APP_VERSION_COMMIT="123456"
          NEXT_PUBLIC_HASURA_URL=${{ needs.deploy-hasura.outputs.url }}/v1/graphql
          NEXT_PUBLIC_APP_REPOSITORY_URL=https://github.com/gary-van-woerkens/carnets

  ##############################################################################
  ## DEPLOY APPLICATION OVER KUBERNETES
  ##############################################################################
  deploy-app:
    name: Deploy application
    runs-on: ubuntu-latest
    needs: [register-app, manifests-app]
    steps:

    - name: Use autodevops deployment
      uses: SocialGouv/actions/autodevops-deploy@manifests-name
      with:
        environment: "dev"
        manifestsName: app-manifests
        token: ${{ secrets.GITHUB_TOKEN }}
        kubeconfig: ${{ secrets.KUBECONFIG }}
        rancherId: ${{ secrets.RANCHER_PROJECT_ID }}

  # ##############################################################################
  # ## RESTORE DATABASE
  # ##############################################################################
  # restore-db:
  #   name: Restore database
  #   runs-on: ubuntu-latest
  #   needs: deploy
  #   steps:

  #   - name: Use autodevops database restore
  #     uses: SocialGouv/actions/autodevops-restore-db@v1
  #     with:
  #       kubeconfig: ${{ secrets.KUBECONFIG }}
  #       rancherId: ${{ secrets.RANCHER_PROJECT_ID }}
  #       socialgouvBaseDomain: ${{ secrets.SOCIALGOUV_BASE_DOMAIN }}

